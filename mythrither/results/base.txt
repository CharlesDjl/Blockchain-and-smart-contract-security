Compilation warnings/errors on ../sol_file/base.sol:
../sol_file/base.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^

INFO:Detectors:
Pragma version>=0.5.0 (../sol_file/base.sol#1) allows old versions
solc-0.5.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Base.c (../sol_file/base.sol#10) is never used in Base (../sol_file/base.sol#4-32)
Base.d (../sol_file/base.sol#11) is never used in Base (../sol_file/base.sol#4-32)
Base.g (../sol_file/base.sol#20) is never used in Base (../sol_file/base.sol#4-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Base.a (../sol_file/base.sol#6) should be constant 
Base.b (../sol_file/base.sol#7) should be constant 
Base.c (../sol_file/base.sol#10) should be constant 
Base.d (../sol_file/base.sol#11) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Slither:../sol_file/base.sol analyzed (1 contracts with 85 detectors), 9 result(s) found
分析时间：15.528762193 s
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Base
Function name: assign1(int256)
PC address: 368
Estimated Gas Usage: 6220 - 26315
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: ../sol_file/base.sol:25

e += x

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: assign1(int256), txdata: 0x2114aec40000000000000000000000000000000000000000000000000000000000000001, decoded_data: (1,), value: 0x0
Caller: [ATTACKER], function: assign1(int256), txdata: 0x2114aec4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, decoded_data: (-1,), value: 0x0
