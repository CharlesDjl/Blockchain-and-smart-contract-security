Compilation warnings/errors on ../sol_file/deprecated_simple.sol:
../sol_file/deprecated_simple.sol:15:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
../sol_file/deprecated_simple.sol:20:9: Warning: Use of the "var" keyword is deprecated.
        var a = [1,2,3];
        ^---^
../sol_file/deprecated_simple.sol:22:14: Warning: Use of the "var" keyword is deprecated.
        var (x, y, z) = (false, "test", 0);
             ^
../sol_file/deprecated_simple.sol:22:17: Warning: Use of the "var" keyword is deprecated.
        var (x, y, z) = (false, "test", 0);
                ^
../sol_file/deprecated_simple.sol:22:20: Warning: Use of the "var" keyword is deprecated.
        var (x, y, z) = (false, "test", 0);
                   ^
../sol_file/deprecated_simple.sol:9:9: Warning: This declaration shadows a builtin symbol.
        bytes32 blockhash = block.blockhash(0);
        ^---------------^
../sol_file/deprecated_simple.sol:10:30: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 hashofhash = sha3(blockhash);
                             ^-------------^
../sol_file/deprecated_simple.sol:10:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hashofhash = sha3(blockhash);
                             ^-------------^
../sol_file/deprecated_simple.sol:10:30: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
        bytes32 hashofhash = sha3(blockhash);
                             ^-------------^
../sol_file/deprecated_simple.sol:18:9: Warning: Return value of low-level calls not used.
        address(this).callcode();
        ^----------------------^
../sol_file/deprecated_simple.sol:22:9: Warning: The type of this variable was inferred as uint8, which can hold values between 0 and 255. This is probably not desired. Use an explicit type to silence this warning.
        var (x, y, z) = (false, "test", 0);
        ^--------------------------------^
../sol_file/deprecated_simple.sol:24:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(address(0));
        ^-----------------^
../sol_file/deprecated_simple.sol:9:29: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        bytes32 blockhash = block.blockhash(0);
                            ^-------------^
../sol_file/deprecated_simple.sol:12:20: Warning: "msg.gas" has been deprecated in favor of "gasleft()"
        uint gas = msg.gas;
                   ^-----^
../sol_file/deprecated_simple.sol:18:9: Warning: "callcode" has been deprecated in favour of "delegatecall".
        address(this).callcode();
        ^--------------------^
../sol_file/deprecated_simple.sol:10:9: Warning: Unused local variable.
        bytes32 hashofhash = sha3(blockhash);
        ^----------------^
../sol_file/deprecated_simple.sol:20:9: Warning: Unused local variable.
        var a = [1,2,3];
        ^---^
../sol_file/deprecated_simple.sol:22:14: Warning: Unused local variable.
        var (x, y, z) = (false, "test", 0);
             ^
../sol_file/deprecated_simple.sol:22:17: Warning: Unused local variable.
        var (x, y, z) = (false, "test", 0);
                ^
../sol_file/deprecated_simple.sol:22:20: Warning: Unused local variable.
        var (x, y, z) = (false, "test", 0);
                   ^
../sol_file/deprecated_simple.sol:18:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        address(this).callcode();
        ^----------------------^
../sol_file/deprecated_simple.sol:24:9: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        suicide(address(0));
        ^-----------------^

INFO:Detectors:
DeprecatedSimple.useDeprecated() (../sol_file/deprecated_simple.sol#7-25) allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal
INFO:Detectors:
DeprecatedSimple.useDeprecated() (../sol_file/deprecated_simple.sol#7-25) ignores return value by address(this).callcode() (../sol_file/deprecated_simple.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls
INFO:Detectors:
DeprecatedSimple.useDeprecated().blockhash (../sol_file/deprecated_simple.sol#9) (local variable) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing
INFO:Detectors:
Deprecated standard detected blockhash = block.blockhash(0) (../sol_file/deprecated_simple.sol#9):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected hashofhash = sha3()(blockhash) (../sol_file/deprecated_simple.sol#10):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected gas = msg.gas (../sol_file/deprecated_simple.sol#12):
	- Usage of "msg.gas" should be replaced with "gasleft()"
Deprecated standard detected THROW (../sol_file/deprecated_simple.sol#15):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected address(this).callcode() (../sol_file/deprecated_simple.sol#18):
	- Usage of "callcode" should be replaced with "delegatecall"
Deprecated standard detected suicide(address)(address(0)) (../sol_file/deprecated_simple.sol#24):
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards
INFO:Detectors:
Pragma version^0.4.24 (../sol_file/deprecated_simple.sol#1) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in DeprecatedSimple.useDeprecated() (../sol_file/deprecated_simple.sol#7-25):
	- address(this).callcode() (../sol_file/deprecated_simple.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Slither:../sol_file/deprecated_simple.sol analyzed (1 contracts with 85 detectors), 12 result(s) found
分析时间：4.203464161 s
==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: DeprecatedSimple
Function name: useDeprecated()
PC address: 349
Estimated Gas Usage: 1371 - 39276
Any sender can cause the contract to self-destruct.
Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.
--------------------
In file: ../sol_file/deprecated_simple.sol:24

suicide(address(0))

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: useDeprecated(), txdata: 0x2553e8a0, value: 0x0
