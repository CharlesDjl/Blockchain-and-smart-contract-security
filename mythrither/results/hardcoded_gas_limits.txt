Compilation warnings/errors on ../sol_file/hardcoded_gas_limits.sol:
../sol_file/hardcoded_gas_limits.sol:13:13: Error: Expected identifier, got 'Payable'
    address payable _callable = 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa;
            ^

Traceback (most recent call last):
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 561, in _run_solc
    ret: Dict = json.loads(stdout)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/slither_analyzer-0.9.3-py3.10.egg/slither/__main__.py", line 837, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/slither_analyzer-0.9.3-py3.10.egg/slither/__main__.py", line 90, in process_all
    compilations = compile_all(target, **vars(args))
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 643, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 131, in __init__
    self._compile(**kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 553, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 156, in compile
    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 285, in _get_targets_json
    return _run_solc(
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 565, in _run_solc
    raise InvalidCompilation(f"Invalid solc compilation {stderr}")
crytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ../sol_file/hardcoded_gas_limits.sol:13:13: Error: Expected identifier, got 'Payable'
    address payable _callable = 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa;
            ^

ERROR:root:Error in ../sol_file/hardcoded_gas_limits.sol
ERROR:root:Traceback (most recent call last):
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 561, in _run_solc
    ret: Dict = json.loads(stdout)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/slither_analyzer-0.9.3-py3.10.egg/slither/__main__.py", line 837, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/slither_analyzer-0.9.3-py3.10.egg/slither/__main__.py", line 90, in process_all
    compilations = compile_all(target, **vars(args))
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 643, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 131, in __init__
    self._compile(**kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/crytic_compile.py", line 553, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 156, in compile
    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 285, in _get_targets_json
    return _run_solc(
  File "/home/charlesdjl/miniconda3/envs/slither/lib/python3.10/site-packages/crytic_compile-0.3.1-py3.10.egg/crytic_compile/platform/solc.py", line 565, in _run_solc
    raise InvalidCompilation(f"Invalid solc compilation {stderr}")
crytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation ../sol_file/hardcoded_gas_limits.sol:13:13: Error: Expected identifier, got 'Payable'
    address payable _callable = 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa;
            ^


分析时间：29.890344374 s
==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: HardcodedNotGood
Function name: doSend(uint256)
PC address: 274
Estimated Gas Usage: 1826 - 36437
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: ../sol_file/hardcoded_gas_limits.sol:24

_callable.send(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [ATTACKER], function: callLowLevel(), txdata: 0xf7cfff49, value: 0x0
Caller: [SOMEGUY], function: doSend(uint256), txdata: 0x2ff9a6960000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: HardcodedNotGood
Function name: callLowLevel()
PC address: 610
Estimated Gas Usage: 1919 - 36813
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: ../sol_file/hardcoded_gas_limits.sol:28

_callable.call.value(0).gas(10000)("")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: callLowLevel(), txdata: 0xf7cfff49, value: 0x0
Caller: [ATTACKER], function: callLowLevel(), txdata: 0xf7cfff49, value: 0x0
