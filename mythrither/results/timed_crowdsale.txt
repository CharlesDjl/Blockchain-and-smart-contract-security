Compilation warnings/errors on ../sol_file/timed_crowdsale.sol:
../sol_file/timed_crowdsale.sol:9:3: Warning: Function state mutability can be restricted to view
  function isSaleFinished() private returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:
TimedCrowdsale.isSaleFinished() (../sol_file/timed_crowdsale.sol#9-11) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= 1546300800 (../sol_file/timed_crowdsale.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
Pragma version^0.5.0 (../sol_file/timed_crowdsale.sol#1) allows old versions
solc-0.5.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Event TimedCrowdsalenotFinished() (../sol_file/timed_crowdsale.sol#6) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:../sol_file/timed_crowdsale.sol analyzed (1 contracts with 85 detectors), 4 result(s) found
分析时间：3.078644944 s
==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: TimedCrowdsale
Function name: run()
PC address: 98
Estimated Gas Usage: 176 - 271
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: ../sol_file/timed_crowdsale.sol:14

if (isSaleFinished()) {
  		emit Finished();
  	} else {
  		emit notFinished();
  	}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [CREATOR], function: run(), txdata: 0xc0406226, value: 0x0
