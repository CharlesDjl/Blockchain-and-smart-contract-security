Running time: 3.043867456 seconds

Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/sec/securify/analyses/patterns/ast/erc20_indexed_pattern.py", line 19, in find_matches
    ast_root = self.get_ast_root()
  File "/sec/securify/analyses/patterns/ast/abstract_ast_pattern.py", line 18, in get_ast_root
    ast_root = self.analysis_context.ast
  File "/sec/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "securify/__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/sec/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/usr/local/lib/python3.7/dist-packages/py_solc-3.2.0-py3.7.egg/solc/main.py", line 181, in compile_standard
    message=error_message,
solc.exceptions.SolcError: fixed_pragma.sol:11:5: SyntaxError: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
    function AssertMultiTx2(uint256 _param) public {
    ^ (Relevant source part starts here and spans across multiple lines).

fixed_pragma.sol:15:5: SyntaxError: No visibility specified. Did you intend to add "public"?
    function run() {
    ^ (Relevant source part starts here and spans across multiple lines).

fixed_pragma.sol:19:5: SyntaxError: No visibility specified. Did you intend to add "public"?
    function set(uint256 _param) {
    ^ (Relevant source part starts here and spans across multiple lines).

        > command: `solc --allow-paths / --standard-json`
        > return code: `0`
        > stderr:
        {"errors":[{"component":"general","formattedMessage":"fixed_pragma.sol:11:5: SyntaxError: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.
    function AssertMultiTx2(uint256 _param) public {
    ^ (Relevant source part starts here and spans across multiple lines).
","message":"Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.","severity":"error","sourceLocation":{"end":261,"file":"fixed_pragma.sol","start":188},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:15:5: SyntaxError: No visibility specified. Did you intend to add \"public\"?
    function run() {
    ^ (Relevant source part starts here and spans across multiple lines).
","message":"No visibility specified. Did you intend to add \"public\"?","severity":"error","sourceLocation":{"end":316,"file":"fixed_pragma.sol","start":267},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:19:5: SyntaxError: No visibility specified. Did you intend to add \"public\"?
    function set(uint256 _param) {
    ^ (Relevant source part starts here and spans across multiple lines).
","message":"No visibility specified. Did you intend to add \"public\"?","severity":"error","sourceLocation":{"end":382,"file":"fixed_pragma.sol","start":322},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:11:5: Warning: This declaration shadows an existing declaration.
    function AssertMultiTx2(uint256 _param) public {
    ^ (Relevant source part starts here and spans across multiple lines).
fixed_pragma.sol:8:1: The shadowed declaration is here:
contract AssertMultiTx2 {
^ (Relevant source part starts here and spans across multiple lines).
","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":386,"file":"fixed_pragma.sol","message":"The shadowed declaration is here:","start":130}],"severity":"warning","sourceLocation":{"end":261,"file":"fixed_pragma.sol","start":188},"type":"Warning"}],"sources":{}}

        > stdout:
pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
