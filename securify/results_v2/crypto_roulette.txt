Running time: 3.014141641 seconds

pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/sec/securify/analyses/patterns/ast/state_variables_default_visibility.py", line 21, in find_matches
    ast_root = self.get_ast_root()
  File "/sec/securify/analyses/patterns/ast/abstract_ast_pattern.py", line 18, in get_ast_root
    ast_root = self.analysis_context.ast
  File "/sec/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "securify/__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/sec/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/usr/local/lib/python3.7/dist-packages/py_solc-3.2.0-py3.7.egg/solc/main.py", line 181, in compile_standard
    message=error_message,
solc.exceptions.SolcError: fixed_pragma.sol:26:5: SyntaxError: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use "constructor(...) { ... }" to define it.
    function CryptoRoulette() public {
    ^ (Relevant source part starts here and spans across multiple lines).

fixed_pragma.sol:39:9: TypeError: Data location must be "storage" or "memory" for variable, but none was given.
        Game game;
        ^-------^

        > command: `solc --allow-paths / --standard-json`
        > return code: `0`
        > stderr:
        {"errors":[{"component":"general","formattedMessage":"fixed_pragma.sol:26:5: SyntaxError: Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.
    function CryptoRoulette() public {
    ^ (Relevant source part starts here and spans across multiple lines).
","message":"Functions are not allowed to have the same name as the contract. If you intend this to be a constructor, use \"constructor(...) { ... }\" to define it.","severity":"error","sourceLocation":{"end":745,"file":"fixed_pragma.sol","start":654},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:26:5: Warning: This declaration shadows an existing declaration.
    function CryptoRoulette() public {
    ^ (Relevant source part starts here and spans across multiple lines).
fixed_pragma.sol:13:1: The shadowed declaration is here:
contract CryptoRoulette {
^ (Relevant source part starts here and spans across multiple lines).
","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1512,"file":"fixed_pragma.sol","message":"The shadowed declaration is here:","start":382}],"severity":"warning","sourceLocation":{"end":745,"file":"fixed_pragma.sol","start":654},"type":"Warning"},{"component":"general","formattedMessage":"fixed_pragma.sol:39:9: TypeError: Data location must be \"storage\" or \"memory\" for variable, but none was given.
        Game game;
        ^-------^
","message":"Data location must be \"storage\" or \"memory\" for variable, but none was given.","severity":"error","sourceLocation":{"end":1063,"file":"fixed_pragma.sol","start":1054},"type":"TypeError"}],"sources":{}}

        > stdout:
