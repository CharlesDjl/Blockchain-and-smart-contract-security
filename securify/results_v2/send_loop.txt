Running time: 3.194309595 seconds

pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/sec/securify/analyses/patterns/static/static_analysis_patterns.py", line 73, in find_matches
    static = analysis_context.static_analysis
  File "/sec/securify/analyses/analysis.py", line 88, in static_analysis
    self._static = self.config.static_analysis(self)
  File "securify/__main__.py", line 255, in <lambda>
    static_analysis=lambda t: static_analysis.analyze_cfg(t.cfg, **souffle_config),
  File "/sec/securify/analyses/analysis.py", line 81, in cfg
    self._cfg = self.config.cfg_compiler(self)
  File "securify/__main__.py", line 254, in <lambda>
    cfg_compiler=lambda t: solidity_cfg_compiler.compile_cfg(t.ast).cfg,
  File "/sec/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "securify/__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/sec/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/usr/local/lib/python3.7/dist-packages/py_solc-3.2.0-py3.7.egg/solc/main.py", line 181, in compile_standard
    message=error_message,
solc.exceptions.SolcError: fixed_pragma.sol:14:2: SyntaxError: No visibility specified. Did you intend to add "public"?
	constructor() {
 ^ (Relevant source part starts here and spans across multiple lines).

fixed_pragma.sol:16:24: SyntaxError: This looks like an address but has an invalid checksum. Correct checksummed address: "0x79B483371E87d664cd39491b5f06250165e4b185". If this is not used as an address, please prepend '00'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
		refundAddresses.push(0x79B483371E87d664cd39491b5F06250165e4b185);
		                     ^----------------------------------------^

fixed_pragma.sol:22:18: TypeError: "send" and "transfer" are only available for objects of type "address payable", not "address".
	        require(refundAddresses[x].send(refunds[refundAddresses[x]])); // doubly bad, now a single failure on send will hold up all funds
	                ^---------------------^

        > command: `solc --allow-paths / --standard-json`
        > return code: `0`
        > stderr:
        {"errors":[{"component":"general","formattedMessage":"fixed_pragma.sol:14:2: SyntaxError: No visibility specified. Did you intend to add \"public\"?
	constructor() {
 ^ (Relevant source part starts here and spans across multiple lines).
","message":"No visibility specified. Did you intend to add \"public\"?","severity":"error","sourceLocation":{"end":464,"file":"fixed_pragma.sol","start":310},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:16:24: SyntaxError: This looks like an address but has an invalid checksum. Correct checksummed address: \"0x79B483371E87d664cd39491b5f06250165e4b185\". If this is not used as an address, please prepend '00'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
		refundAddresses.push(0x79B483371E87d664cd39491b5F06250165e4b185);
		                     ^----------------------------------------^
","message":"This looks like an address but has an invalid checksum. Correct checksummed address: \"0x79B483371E87d664cd39491b5f06250165e4b185\". If this is not used as an address, please prepend '00'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals","severity":"error","sourceLocation":{"end":459,"file":"fixed_pragma.sol","start":417},"type":"SyntaxError"},{"component":"general","formattedMessage":"fixed_pragma.sol:22:18: TypeError: \"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".
	        require(refundAddresses[x].send(refunds[refundAddresses[x]])); // doubly bad, now a single failure on send will hold up all funds
	                ^---------------------^
","message":"\"send\" and \"transfer\" are only available for objects of type \"address payable\", not \"address\".","severity":"error","sourceLocation":{"end":668,"file":"fixed_pragma.sol","start":645},"type":"TypeError"}],"sources":{}}

        > stdout:
