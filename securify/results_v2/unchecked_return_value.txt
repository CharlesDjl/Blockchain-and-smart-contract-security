Running time: 2.800674174 seconds

pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
Traceback (most recent call last):
  File "securify/__main__.py", line 286, in <module>
    main()
  File "securify/__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/sec/securify/analyses/patterns/ast/erc20_indexed_pattern.py", line 19, in find_matches
    ast_root = self.get_ast_root()
  File "/sec/securify/analyses/patterns/ast/abstract_ast_pattern.py", line 18, in get_ast_root
    ast_root = self.analysis_context.ast
  File "/sec/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "securify/__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/sec/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/usr/local/lib/python3.7/dist-packages/py_solc-3.2.0-py3.7.egg/solc/main.py", line 181, in compile_standard
    message=error_message,
solc.exceptions.SolcError: fixed_pragma.sol:6:12: TypeError: Wrong argument count for function call: 0 arguments given but expected 1. This function requires a single bytes argument. Use "" as argument to provide empty calldata.
  	require(callee.call());
  	        ^-----------^

fixed_pragma.sol:6:4: TypeError: No matching declaration found after argument-dependent lookup.
  	require(callee.call());
  	^-----^

        > command: `solc --allow-paths / --standard-json`
        > return code: `0`
        > stderr:
        {"errors":[{"component":"general","formattedMessage":"fixed_pragma.sol:6:12: TypeError: Wrong argument count for function call: 0 arguments given but expected 1. This function requires a single bytes argument. Use \"\" as argument to provide empty calldata.
  	require(callee.call());
  	        ^-----------^
","message":"Wrong argument count for function call: 0 arguments given but expected 1. This function requires a single bytes argument. Use \"\" as argument to provide empty calldata.","severity":"error","sourceLocation":{"end":121,"file":"fixed_pragma.sol","start":108},"type":"TypeError"},{"component":"general","formattedMessage":"fixed_pragma.sol:6:4: TypeError: No matching declaration found after argument-dependent lookup.
  	require(callee.call());
  	^-----^
","message":"No matching declaration found after argument-dependent lookup.","severity":"error","sourceLocation":{"end":107,"file":"fixed_pragma.sol","start":100},"type":"TypeError"}],"sources":{}}

        > stdout:
